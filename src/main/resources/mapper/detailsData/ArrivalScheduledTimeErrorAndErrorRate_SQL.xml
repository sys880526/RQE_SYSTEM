<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="arrivalScheduledTimeErrorAndErrorRate">

	<select id="getArrivalScheduledTimeErrorAndErrorRateData" parameterType="hashmap"  resultType="hashmap">
		select	cp
		,		count(sub_eta_tm) as normal_count -- CP 별 정상 주행 건수
		,		round(avg(sub_eta_tm),1) as avg_mae_eta -- ETA 오차 평균값
		,		max(sub_eta_tm) as max_mae_eta -- ETA 오차 최대값
		,		round(stddev(sub_eta_tm),1) as standard_deviation_mae -- ETA 오차 표준편차
		, 
			-- 	case when rank() over(order by round(avg(sub_eta_tm),1)) = 1 then 1 else 0 end as check_select_01,
			-- 	case when rank() over(order by round(avg(sub_eta_tm),1) desc) = 1 then 1 else 0 end as check_select_01,
				case 
					when (case when rank() over(order by round(avg(sub_eta_tm),1)) = 1 then 1 else 0 end) = 1 then 1
					when (case when rank() over(order by round(avg(sub_eta_tm),1) desc) = 1 then 1 else 0 end) = 1 then 2
					else 0 end as check_select_01
		,		round(avg(mape_eta_tm),1) as avg_mape_eta -- ETA 오차율 평균값
		,		max(mape_eta_tm) as max_mape_eta -- ETA 오차율 최대값
		,		round(stddev(mape_eta_tm),1) as standard_deviation_mape -- ETA 오차율 표준편차
		, 
			-- 	case when rank() over(order by round(avg(mape_eta_tm),1)) = 1 then 1 else 0 end as check_select_02,
			-- 	case when rank() over(order by round(avg(mape_eta_tm),1) desc) = 1 then 1 else 0 end as check_select_02
				case 
					when (case when rank() over(order by round(avg(mape_eta_tm),1)) = 1 then 1 else 0 end) = 1 then 1
					when (case when rank() over(order by round(avg(mape_eta_tm),1) desc) = 1 then 1 else 0 end) = 1 then 2
					else 0 end as check_select_02
					-- 표가 2개라 check_select 또한 두개 입니다.
		from	(
					SELECT	bmtid
					, 		userid
					, 		cp
					, 		except_info
					, 		state_condition
					, 		est_time
					, 		driver_tm
					,		case 
								when except_info = 'y' and state_condition like '정상%' then abs(driver_tm - to_number(est_time,'0000')) else null end as sub_eta_tm
					,		case 
								when except_info = 'y' and state_condition like '정상%' 
								then case when driver_tm = 0 then null else round(((abs(driver_tm - to_number(est_time,'0000'))+0.00)/(driver_tm+0.00))*100,1) end
								else null end as mape_eta_tm
					from	(
								SELECT	*
								,		case
											when	to_char(to_date(starttm,'yyyy-mm-dd hh24:mi:ss'),'day') 
											in		(
														to_char(to_date('00010101','yyyymmdd'),'day')
													,	to_char(to_date('00010102','yyyymmdd'),'day')
													,	to_char(to_date('00010103','yyyymmdd'),'day')
													,	to_char(to_date('00010104','yyyymmdd'),'day')
													,	to_char(to_date('00010105','yyyymmdd'),'day')
													) 
											then	(
														case
															when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
															between to_char(am_peak_start,'hh24:mi:ss') 
															and 	to_char(am_peak_end, 'hh24:mi:ss') 
															then 	'am_peak' 
															when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
															between to_char(am_non_peak_start,'hh24:mi:ss') 
															and 	to_char(am_non_peak_end, 'hh24:mi:ss') 
															then 	'am_non_peak'
															when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') <![CDATA[<]]> to_char(am_peak_start,'hh24:mi:ss') 
															then 	'am_non_peak'
															when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
															between to_char(pm_non_peak_start,'hh24:mi:ss') 
															and 	to_char(pm_non_peak_end, 'hh24:mi:ss') 
															then 	'pm_non_peak' 
															when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') <![CDATA[>]]> to_char(pm_peak_end,'hh24:mi:ss') 
															then 	'pm_non_peak'
															when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
															between to_char(pm_peak_start,'hh24:mi:ss') 
															and 	to_char(pm_peak_end, 'hh24:mi:ss') 
															then 	'pm_peak'
															else 	null 
															end
													)
											when 	to_char(to_date(starttm,'yyyy-mm-dd hh24:mi:ss'),'day') 
											in		(
														to_char(to_date('00010106','yyyymmdd'),'day')
													,	to_char(to_date('00010107','yyyymmdd'),'day')
													) 
											then	(
														case
															when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
															between to_char(am_start,'hh24:mi:ss') and to_char(am_end, 'hh24:mi:ss') 
															then 	'am'
															when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
															between to_char(pm_start,'hh24:mi:ss') and to_char(pm_end, 'hh24:mi:ss') 
															then 	'pm'	
															else 	null 
															end
													)
											else 	null 
											end as by_time
								,		case
											when 	to_number(arrive_distance,'0000.00') 
											between shortest_distance_start and shortest_distance_end 
											then 	'shortest_distance'
											when 	to_number(arrive_distance,'0000.00') 
											between short_distance_start and short_distance_end 
											then 	'short_distance'
											when 	to_number(arrive_distance,'0000.00') 
											between medium_distance_start and medium_distance_end 
											then 	'medium_distance'
											when 	to_number(arrive_distance,'0000.00') 
											between long_distance_start and long_distance_end 
											then 	'long_distance'	
											when 	to_number(arrive_distance,'0000.00') <![CDATA[>=]]> longest_distance_start 
											then 	'longest_distance'
											else 	null 
											end as by_distance
								,		to_number ( to_char ( to_timestamp ( bmt_end_tm, 'yyyy-mm-dd hh24:mi:ss' ) - to_timestamp ( bmt_start_tm, 'yyyy-mm-dd hh24:mi:ss' ), 'hh24' ), '00' ) * 60+ to_number ( to_char ( to_timestamp ( bmt_end_tm, 'yyyy-mm-dd hh24:mi:ss' ) - to_timestamp ( bmt_start_tm, 'yyyy-mm-dd hh24:mi:ss' ), 'mi' ), '00' ) AS driver_tm
								from 	bmt_total_info a
								, 		setting_value b
								where 	b.adminid 
								in 		(
											select	adminid 
											from 	admin_user_list 
											where 	userid = #{userid} or adminid = #{userid}
										)
							) a
					where	userid 
					IN 		( 
								SELECT	userid  
								FROM 	admin_user_list 
								WHERE 	adminid 
								IN 		( 
											SELECT	adminid  
											FROM 	admin_user_list 
											WHERE 	adminid = #{userid} or userid = #{userid}
										)
							) -- userid
					AND 	to_date ( substr( bmtid, 1, 6 ), 'yymmdd' ) 
					BETWEEN to_date (#{start_date},'yyyy-mm-dd') 
					and 	to_date(#{end_date},'yyyy-mm-dd') -- 검색 기간
					and except_info = 'y' and state_condition like '정상%'
					and 	by_time 
					in 
					<foreach item="item" index="index" collection="list_time" open="(" separator="," close=")">
						#{item}
					</foreach>	
					and by_distance 
					in 
					<foreach item="item" index="index" collection="list_distance" open="(" separator="," close=")">
						#{item}
					</foreach>	
	-- 				and		bmtid
	-- 				in 		(
	-- 							select	bmtid
	-- 							from	(
	-- 										select	bmtid
	--										, 		sum(total_count) as total_count
	--										, 		sum(normal_count) as normal_count
	-- 										from	(
	-- 													select	bmtid
	--													,		case 
	--																when cp is not null then 1 else null end as total_count
	--													,		case 
	--																when except_info = 'y' and state_condition like '정상%' then 1 else null end as normal_count
	-- 													from 	bmt_total_info
	-- 												) a
	-- 										group by bmtid
	-- 									) a
	-- 							where 	total_count = normal_count
	-- 						)
	
				) a
		group by cp
		order by cp
	</select>
	
	<select id="getArrivalScheduledTimeErrorAndErrorRateGraphData" parameterType="hashmap" resultType="hashmap">
		SELECT	ROW_NUMBER() OVER(partition by cp order by bmtid) as eta_mae_no
		,		cp
		,		case 
					when except_info = 'y' and state_condition like '정상%' 
					then abs(driver_tm - to_number(est_time,'0000')) 
					else null 
					end as eta_mae				
				from	(
							SELECT	*
							,		case
										when	to_char(to_date(starttm,'yyyy-mm-dd hh24:mi:ss'),'day') 
										in		(
													to_char(to_date('00010101','yyyymmdd'),'day')
												,	to_char(to_date('00010102','yyyymmdd'),'day')
												,	to_char(to_date('00010103','yyyymmdd'),'day')
												,	to_char(to_date('00010104','yyyymmdd'),'day')
												,	to_char(to_date('00010105','yyyymmdd'),'day')
												) 
										then	(
													case
														when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
														between to_char(am_peak_start,'hh24:mi:ss') 
														and 	to_char(am_peak_end, 'hh24:mi:ss') 
														then 	'am_peak' 
														when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
														between to_char(am_non_peak_start,'hh24:mi:ss') 
														and 	to_char(am_non_peak_end, 'hh24:mi:ss') 
														then 	'am_non_peak'
														when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') <![CDATA[<]]> to_char(am_peak_start,'hh24:mi:ss') 
														then 	'am_non_peak'
														when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
														between to_char(pm_non_peak_start,'hh24:mi:ss') 
														and 	to_char(pm_non_peak_end, 'hh24:mi:ss') 
														then 	'pm_non_peak' 
														when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') <![CDATA[>]]> to_char(pm_peak_end,'hh24:mi:ss') 
														then 	'pm_non_peak'
														when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
														between to_char(pm_peak_start,'hh24:mi:ss') 
														and 	to_char(pm_peak_end, 'hh24:mi:ss') 
														then 	'pm_peak'
														else 	null 
														end
												)
										when 	to_char(to_date(starttm,'yyyy-mm-dd hh24:mi:ss'),'day') 
										in		(
													to_char(to_date('00010106','yyyymmdd'),'day')
												,	to_char(to_date('00010107','yyyymmdd'),'day')
												) 
										then	(
													case
														when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
														between to_char(am_start,'hh24:mi:ss') and to_char(am_end, 'hh24:mi:ss') 
														then 	'am'
														when 	to_char(to_timestamp(starttm,'yyyy-mm-dd hh24:mi:ss'), 'hh24:mi:ss') 
														between to_char(pm_start,'hh24:mi:ss') 
														and 	to_char(pm_end, 'hh24:mi:ss') 
														then 	'pm'	
														else 	null 
														end
												)
										else 	null 
										end as by_time
							,		case
										when 	to_number(arrive_distance,'0000.00') 
										between shortest_distance_start and shortest_distance_end 
										then 	'shortest_distance'
										when 	to_number(arrive_distance,'0000.00') 
										between short_distance_start and short_distance_end 
										then 	'short_distance'
										when 	to_number(arrive_distance,'0000.00') 
										between medium_distance_start and medium_distance_end 
										then 	'medium_distance'
										when 	to_number(arrive_distance,'0000.00') 
										between long_distance_start and long_distance_end 
										then 	'long_distance'	
										when 	to_number(arrive_distance,'0000.00') <![CDATA[>=]]> longest_distance_start 
										then 	'longest_distance'
										else 	null 
										end as by_distance
							,		to_number 	( to_char ( to_timestamp ( bmt_end_tm, 'yyyy-mm-dd hh24:mi:ss' ) - to_timestamp ( bmt_start_tm, 'yyyy-mm-dd hh24:mi:ss' ), 'hh24' ), '00' ) * 60+ to_number ( to_char ( to_timestamp ( bmt_end_tm, 'yyyy-mm-dd hh24:mi:ss' ) - to_timestamp ( bmt_start_tm, 'yyyy-mm-dd hh24:mi:ss' ), 'mi' ), '00' ) AS driver_tm
							from 	bmt_total_info a
							, 		setting_value b
							where 	b.adminid 
							in 		(
										select	adminid 
										from 	admin_user_list 
										where 	userid = #{userid} or adminid = #{userid}
									)
						) a
				where	userid 
				IN 		( 
							SELECT	userid  
							FROM 	admin_user_list 
							WHERE 	adminid 
							IN 		( 
										SELECT	adminid  
										FROM 	admin_user_list 
										WHERE 	userid = #{userid} or adminid = #{userid}
									)
						) -- userid
				AND 	to_date ( substr( bmtid, 1, 6 ), 'yymmdd' ) 
				BETWEEN to_date (#{start_date},'yyyy-mm-dd') 
				and 	to_date(#{end_date},'yyyy-mm-dd') -- 검색 기간
				and except_info = 'y' and state_condition like '정상%'
				and 	by_time 
				in 
				<foreach item="item" index="index" collection="list_time" open="(" separator="," close=")">
					#{item}
				</foreach>	
				and 	by_distance 
				in 
				<foreach item="item" index="index" collection="list_distance" open="(" separator="," close=")">
					#{item}
				</foreach>	
-- 				and 	bmtid
-- 				in 		(
-- 							select	bmtid
-- 							from	(
-- 										select	bmtid
--										, 		sum(total_count) as total_count
--										, 		sum(normal_count) as normal_count
-- 										from	(
-- 													select	bmtid
--													,		case 
--																when cp is not null then 1 else null end as total_count
--													,		case 
--																when except_info = 'y' and state_condition like '정상%' then 1 else null end as normal_count
-- 													from 	bmt_total_info
-- 												) a
-- 										group by bmtid
-- 									) a
-- 							where 	total_count = normal_count
-- 						)
				order by 1,2
	</select>
</mapper>